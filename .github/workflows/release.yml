name: Release

on:
  # https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#push
  push:
    branches:
      - '[0-9][0-9].[0-9].x'  # e.g., 23.3.x
      - '[0-9][0-9].[0-9][0-9].x'  # e.g., 23.11.x

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
          # https://github.com/conda-incubator/setup-miniconda#use-a-default-shell
        shell: bash -el {0}    # bash exit immediately on error + login shell

    steps:
      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Cache Conda
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/conda_pkgs_dir
          key: cache-${{ env.HASH }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@d2e6a045a86077fb6cad6f5adf368e9076ddaa8d # v3.1.0
        with:
          condarc-file: .github/condarc-${{ matrix.default-channel }}
          run-post: false  # skip post cleanup

      - name: Conda Install
        run: >
          conda install
          --yes
          --file news/requirements.txt

      - name: Conda Info
        # view test env info (not base)
        run: python -m conda info --verbose

      - name: Conda Config
        run: conda config --show-sources

      - name: Conda List
        run: conda list --show-channel-urls

      - name: Configure git user
        run: |
          git config --global user.name 'Conda Bot'
          git config --global user.email '18747875+conda-bot@users.noreply.github.com'

      - name: Run Townscrier
        run: townscrier

      - name: Commit changes
        run: |
          git add .
          git commit --message "Changelog ${{ version }}"

      - name: Create fork
        # no-op if the repository is already forked
        run: echo FORK=$(gh repo fork --clone=false --default-branch-only 2>&1 | awk '{print $1}') >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Create PR
        # no-op if no commits were made
        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5
        with:
          push-to-fork: ${{ env.FORK }}
          token: ${{ secrets.RELEASE_TOKEN }}
          branch: changelog
          delete-branch: true
          title: Changelog ${{ version }}
          body: |
            [release.yml]: ${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/release.yml

            ✂️ snip snip ✂️ the making of a new release.

            This PR was triggered by @${{ github.triggering_actor }} via ${{ github.event_name }}.

            ###### Auto-generated by the [`release.yml`][release.yml] workflow, see ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.

      - name: Push changes
        run: git push --force-with-lease
